
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS mpas CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friendship CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS films_genres CASCADE;
DROP TABLE IF EXISTS films_directors CASCADE;
DROP TABLE IF EXISTS directors CASCADE;

CREATE TABLE IF NOT EXISTS genres (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar
);

CREATE TABLE IF NOT EXISTS mpas (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar
);

CREATE TABLE IF NOT EXISTS films (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar,
    description varchar,
    release_date date,
    duration integer,
    mpa_id INTEGER REFERENCES mpas
);

CREATE TABLE IF NOT EXISTS users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login varchar,
    email varchar,
    name varchar,
    birthday date
);

CREATE TABLE IF NOT EXISTS friendship (
    following_user_id INTEGER REFERENCES users,
    followed_user_id INTEGER REFERENCES users,
    status varchar,
    PRIMARY KEY (following_user_id, followed_user_id)
);

CREATE TABLE IF NOT EXISTS likes (
    user_id INTEGER REFERENCES users,
    film_id INTEGER REFERENCES films,
    PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS films_genres (
    film_id INTEGER REFERENCES films,
    genre_id INTEGER REFERENCES genres
--     PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS directors (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS films_directors (
    film_id INTEGER REFERENCES films(id),
    director_id INTEGER REFERENCES directors(id),
    PRIMARY KEY (film_id, director_id)
);


DELETE FROM films;
DELETE FROM users;
DELETE FROM mpas;
DELETE FROM genres;
DELETE FROM friendship;
DELETE FROM likes;
DELETE FROM films_genres;
DELETE FROM directors;
DELETE FROM films_directors;